(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();class m{constructor(){this.participants=[]}addParticipant({name:e,email:t,budget:r}){const n={id:crypto.randomUUID(),name:e.trim(),email:t.trim(),budget:parseInt(r,10)};this.participants.push(n)}removeParticipant(e){this.participants=this.participants.filter(t=>t.id!==e)}getParticipants(){return[...this.participants]}}class u{constructor(){this.participantsGrid=document.getElementById("participants-grid"),this.noParticipants=document.getElementById("no-participants"),this.generateButton=document.getElementById("generate-button"),this.results=document.getElementById("results"),this.assignmentsGrid=document.getElementById("assignments-grid"),this.formError=document.getElementById("form-error"),this.error=document.getElementById("error")}getFormData(){return{name:document.getElementById("name").value,email:document.getElementById("email").value,budget:document.getElementById("budget").value}}validateEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}validateParticipant({name:e,email:t}){return e.trim()?t.trim()?this.validateEmail(t)?null:"Please enter a valid email address":"Email is required":"Name is required"}clearForm(){document.getElementById("name").value="",document.getElementById("email").value="",document.getElementById("budget").value="20",this.showFormError("")}showFormError(e){this.formError.textContent=e}showError(e){this.error.textContent=e}updateGenerateButton(e){this.generateButton.disabled=e<3}updateParticipantList(e){this.participantsGrid.innerHTML="",this.noParticipants.style.display=e.length?"none":"block",e.forEach(t=>{const r=document.createElement("div");r.className="participant-card",r.innerHTML=`
        <div class="participant-header">
          <h3>${t.name}</h3>
          <button class="remove-button" title="Remove participant">×</button>
        </div>
        <div class="participant-details">
          <p class="email">${t.email}</p>
          <p class="budget">Budget: €${t.budget}</p>
        </div>
      `,this.participantsGrid.appendChild(r)})}displayAssignments(e){this.results.classList.remove("hidden"),this.assignmentsGrid.innerHTML="",e.forEach(t=>{const r=e.find(s=>s.id===t.assignedTo),n=document.createElement("div");n.className="assignment-card",n.innerHTML=`
        <div class="card-front">
          <h3>${t.name}</h3>
          <p class="email">${t.email}</p>
          <p class="budget">Budget: €${t.budget}</p>
        </div>
        <div class="card-back">
          <h3>Gives a gift to:</h3>
          <div class="recipient-info">
            <h4>${r.name}</h4>
            <p>${r.email}</p>
          </div>
        </div>
      `,this.assignmentsGrid.appendChild(n)})}toggleAllAssignments(){var n;const e=document.querySelectorAll(".assignment-card"),t=document.getElementById("reveal-all-button"),r=!((n=e[0])!=null&&n.classList.contains("revealed"));e.forEach(s=>{r?s.classList.add("revealed"):s.classList.remove("revealed")}),t.textContent=r?"Hide All Assignments":"Reveal All Assignments"}}class g{shuffleArray(e){const t=[...e];for(let r=t.length-1;r>0;r--){const n=Math.floor(Math.random()*(r+1));[t[r],t[n]]=[t[n],t[r]]}return t}validateAssignments(e){return e.every(t=>!(!e.find(n=>n.id===t.assignedTo)||t.id===t.assignedTo))}assignSecretSanta(e){if(e.length<3)throw new Error("Need at least 3 participants");let t=0;const r=100;for(;t<r;){const n=this.shuffleArray([...e]),s=n.map((o,l)=>{const c=(l+1)%n.length;return{...o,assignedTo:n[c].id}});if(this.validateAssignments(s))return s;t++}throw new Error("Could not generate valid Secret Santa assignments")}}const d=new m,a=new u,p=new g;document.getElementById("participant-form").addEventListener("submit",i=>{i.preventDefault();const e=a.getFormData(),t=a.validateParticipant(e);if(t){a.showFormError(t);return}d.addParticipant(e),a.updateParticipantList(d.getParticipants()),a.clearForm(),a.updateGenerateButton(d.getParticipants().length)});document.getElementById("generate-button").addEventListener("click",()=>{try{const i=p.assignSecretSanta(d.getParticipants());a.displayAssignments(i),a.showError("")}catch{a.showError("Failed to generate assignments. Please try again.")}});document.getElementById("reveal-all-button").addEventListener("click",()=>{a.toggleAllAssignments()});
